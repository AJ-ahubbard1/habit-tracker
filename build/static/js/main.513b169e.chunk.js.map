{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddHabit.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","console","log","Header","title","showAddForm","showAdd","Task","task","onDelete","onCount","showList","date","Date","timeSinceLast","toDateString","name","cursor","id","count","isListShown","occurrences","map","val","toLocaleTimeString","Tasks","tasks","AddHabit","onAdd","useState","setName","setDate","time","setTime","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","App","server","setTasks","setShowAddForm","toggleAddForm","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","dateStr","vals","getFullYear","getMonth","getDate","getHours","getMinutes","list","push","newTask","length","method","headers","body","JSON","stringify","deleteTask","filter","addToCount","values","getSeconds","taskToUpdate","updatedTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.513b169e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  \r\n  return (\r\n    <div>\r\n      <button onClick={onClick} className='btn' style={{backgroundColor: color}} >{text}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst logClick = () => {\r\n  console.log('click')\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n  onClick: logClick,\r\n}\r\n\r\nexport default Button\r\n","/*example of CSS in JS \r\n  const headerStyle = {\r\n  color: 'red',\r\n  backgroundColor: 'black'\r\n}\r\n<h1 style = {headerStyle}>\r\n */\r\nimport Button from './Button'\r\n\r\n\r\n\r\nconst Header = ({ title, showAddForm, showAdd}) => {\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      {showAdd ?\r\n        (<Button color='red' text='Cancel' onClick={showAddForm}/>)\r\n        :(<Button color='green' text='Add' onClick={showAddForm}/>)\r\n      }\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: \r\n    'Habit Tracker',\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport { FaChevronDown } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onCount, showList }) => {\r\n  const date = new Date(...task.timeSinceLast).toDateString()\r\n\r\n  return (\r\n    <div className='task'>\r\n      <h3>{task.name}\r\n        <FaTimes \r\n          style={{color:'red', cursor:'pointer'}} \r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>count: {task.count}{' '}\r\n        <FaPlus style={{color:'green', cursor:'pointer'}} onClick={() => onCount(task.id)}/>\r\n      </p>\r\n      <div>Last record: {date}\r\n        <FaChevronDown onClick={() => showList(task.id)}/>\r\n        {task.isListShown ? \r\n          task.occurrences.map((val) => \r\n          (<p key={val}>{new Date(...val).toDateString()}{', '}{new Date(...val).toLocaleTimeString()}</p>))\r\n          : ('')\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onCount, showList }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task={task} onDelete={onDelete} onCount={onCount} showList={showList}/>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddHabit = ({ onAdd }) => {\r\n  const [name, setName] = useState('')\r\n  const [date, setDate] = useState('')\r\n  const [time, setTime] = useState('')\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(!name) {\r\n      alert('Please add a Habit')\r\n      return\r\n    }\r\n    onAdd({name, date, time })\r\n\r\n    setName('')\r\n    setDate('')\r\n    setTime('')\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Habit</label>\r\n        <input type='text' placeholder='Add Habit' \r\n         value={name} onChange={(e) => setName(e.target.value)}/>\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Date</label>\r\n        <input type='date'\r\n        value={date} onChange={(e) => setDate(e.target.value)}/>\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Time</label>\r\n        <input type='time'\r\n        value={time} onChange={(e) => setTime(e.target.value)}/>\r\n      </div>\r\n      <input type='submit' value='Save Habit' className='btn btn-block'/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddHabit\r\n","import { useState, useEffect } from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddHabit from './components/AddHabit'\n\nfunction App() {\n  const server = '192.168.1.48:5000'\n  const [tasks, setTasks] = useState([])\n  const [showAddForm, setShowAddForm] = useState(false)\n  const toggleAddForm = () => setShowAddForm(!showAddForm)\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  const fetchTasks = async () => {\n    const res = await fetch(`http://${server}/tasks`)\n    const data = await res.json()\n    return data\n  }\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://${server}/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  const addTask = async (task) => {\n    const dateStr = `${task.date}T${task.time}`\n    const date = new Date(dateStr);\n    const vals = [date.getFullYear(),date.getMonth(),date.getDate(),\n    date.getHours(),date.getMinutes(),0]\n    const list = []\n    list.push(vals)\n    const newTask = {\n      id:tasks.length + 1,\n      name: task.name,\n      count: 1,\n      timeSinceLast: vals,\n      occurrences: list,\n      isListShown: false\n    } \n    const res = await fetch(\n      `http://${server}/tasks`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(newTask)\n      })\n    const data = await res.json()\n    setTasks([...tasks, data])\n    toggleAddForm()\n  }\n\n  const deleteTask = async (id) => {\n    await fetch(`http://${server}/tasks/${id}`, { method: 'DELETE' })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n  const addToCount = async (id) => {\n    const date = new Date();\n    const values = [date.getFullYear(),date.getMonth(),date.getDate(),\n      date.getHours(),date.getMinutes(),date.getSeconds()]\n    const taskToUpdate = await fetchTask(id)\n    const list = taskToUpdate.occurrences\n    list.push(values)\n    const updatedTask = { ...taskToUpdate, count: taskToUpdate.count + 1, timeSinceLast: values, occurrences: list}\n    const res = await fetch(\n      `http://${server}/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updatedTask)\n      })\n\n    const data = await res.json()\n    \n    setTasks(tasks.map((task) => \n      task.id === id ? {...task, count:data.count, timeSinceLast: data.timeSinceLast, occurrences:data.occurrences} : task \n    ))\n  }\n  const showList = (id) => {\n    setTasks(tasks.map((task) => \n      task.id === id ? \n        {...task, isListShown: !task.isListShown\n        } : task \n      )\n    )\n  }\n    \n  return (\n    <div className=\"container\">\n      <Header showAddForm={toggleAddForm} showAdd={showAddForm}/>\n      {showAddForm && <AddHabit onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onCount={addToCount} showList={showList}/>\n      ) : (\n        <p>No Habits... add a new one!</p> \n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}